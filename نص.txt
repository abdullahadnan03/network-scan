import tkinter as tk
from tkinter import ttk, scrolledtext, filedialog
import subprocess

# وظيفة لتشغيل الفحص
def run_scan():
    target = target_entry.get()
    scan_type = scan_type_var.get()
    result_box.delete(1.0, tk.END)  # تنظيف صندوق النتائج

    if not target:
        result_box.insert(tk.END, "[-] Please enter a target (IP or network range).\n")
        return

    # تحديد أوامر الفحص بناءً على نوع الفحص
    if scan_type == "Ping Scan":
        cmd = ["nmap", "-sP", target]
    elif scan_type == "Full Scan":
        cmd = ["nmap", "-sS", target]
    elif scan_type == "Port Scan":
        cmd = ["nmap", "-sV", target]
    elif scan_type == "OS Detection":
        cmd = ["nmap", "-O", target]
    elif scan_type == "Aggressive Scan":
        cmd = ["nmap", "-A", target]
    else:
        result_box.insert(tk.END, "[-] Invalid scan type selected.\n")
        return

    try:
        # تشغيل الفحص وعرض النتائج
        result_box.insert(tk.END, f"[+] Running: {' '.join(cmd)}\n\n")
        result = subprocess.check_output(cmd, text=True)
        result_box.insert(tk.END, result)
    except Exception as e:
        result_box.insert(tk.END, f"[-] Error: {str(e)}\n")

# وظيفة لحفظ النتائج في ملف
def save_results():
    results = result_box.get(1.0, tk.END).strip()
    if not results:
        result_box.insert(tk.END, "[-] No results to save.\n")
        return

    file_path = filedialog.asksaveasfilename(
        defaultextension=".txt",
        filetypes=[("Text Files", "*.txt"), ("All Files", "*.*")]
    )
    if file_path:
        with open(file_path, "w") as file:
            file.write(results)
        result_box.insert(tk.END, f"[+] Results saved to {file_path}\n")

# إعداد نافذة Tkinter
app = tk.Tk()
app.title("Advanced Network Scanner")
app.geometry("900x700")

# إدخال الهدف
tk.Label(app, text="Target (IP/Network):").grid(row=0, column=0, padx=10, pady=5, sticky="w")
target_entry = tk.Entry(app, width=50)
target_entry.grid(row=0, column=1, padx=10, pady=5)

# اختيار نوع الفحص
tk.Label(app, text="Scan Type:").grid(row=1, column=0, padx=10, pady=5, sticky="w")
scan_type_var = tk.StringVar(value="Ping Scan")
scan_type_menu = ttk.Combobox(
    app, textvariable=scan_type_var, 
    values=["Ping Scan", "Full Scan", "Port Scan", "OS Detection", "Aggressive Scan"]
)
scan_type_menu.grid(row=1, column=1, padx=10, pady=5)

# زر تشغيل الفحص
scan_btn = tk.Button(app, text="Run Scan", command=run_scan)
scan_btn.grid(row=2, column=0, columnspan=2, pady=10)

# نافذة النتائج
tk.Label(app, text="Scan Results:").grid(row=3, column=0, padx=10, pady=5, sticky="nw")
result_box = scrolledtext.ScrolledText(app, width=100, height=30)
result_box.grid(row=3, column=0, columnspan=3, padx=10, pady=5)

# زر حفظ النتائج
save_btn = tk.Button(app, text="Save Results", command=save_results)
save_btn.grid(row=4, column=0, columnspan=3, pady=10)

# تشغيل التطبيق
app.mainloop()